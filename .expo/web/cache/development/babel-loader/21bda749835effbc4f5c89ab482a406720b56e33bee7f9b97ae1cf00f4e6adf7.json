{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Aleo_700Bold, Aleo_400Regular } from '@expo-google-fonts/aleo';\nimport * as Font from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Verification() {\n  var _useState = useState(['', '', '', '']),\n    _useState2 = _slicedToArray(_useState, 2),\n    verificationCode = _useState2[0],\n    setVerificationCode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    fontsLoaded = _useState4[0],\n    setFontsLoaded = _useState4[1];\n  var inputRefs = useRef([]);\n  var navigation = useNavigation();\n  var handleBackButtonPress = function handleBackButtonPress() {\n    navigation.goBack();\n  };\n  var loadFonts = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        Aleo_700Bold: Aleo_700Bold,\n        Aleo_400Regular: Aleo_400Regular\n      });\n      setFontsLoaded(true);\n    });\n    return function loadFonts() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  React.useEffect(function () {\n    loadFonts();\n  }, []);\n  var handleInputChange = function handleInputChange(text, index) {\n    var newVerificationCode = _toConsumableArray(verificationCode);\n    newVerificationCode[index] = text;\n    setVerificationCode(newVerificationCode);\n    if (text.length === 0 && index > 0) {\n      inputRefs.current[index - 1].focus();\n    } else if (text.length === 1 && index < 3) {\n      var _inputRefs$current;\n      (_inputRefs$current = inputRefs.current[index + 1]) == null ? void 0 : _inputRefs$current.focus();\n    }\n  };\n  var renderInputs = function renderInputs() {\n    return verificationCode.map(function (code, index) {\n      return _jsx(TextInput, {\n        ref: function ref(_ref2) {\n          return inputRefs.current[index] = _ref2;\n        },\n        style: [styles.codeInput, code.length === 0 && styles.emptyInput, {\n          fontFamily: 'Aleo_400Regular'\n        }],\n        maxLength: 1,\n        keyboardType: \"numeric\",\n        value: code,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(text, index);\n        }\n      }, index.toString());\n    });\n  };\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: handleBackButtonPress,\n        children: _jsx(Text, {\n          style: styles.backButtonText,\n          children: '<'\n        })\n      }), _jsx(Text, {\n        style: [styles.headerText, {\n          fontFamily: 'Aleo_700Bold'\n        }],\n        children: \"Verification\"\n      })]\n    }), _jsx(View, {\n      style: styles.contentContainer,\n      children: _jsxs(View, {\n        style: styles.formContainer,\n        children: [_jsx(Text, {\n          style: [styles.instructionText, {\n            fontFamily: 'Aleo_400Regular'\n          }],\n          children: \"Please enter the verification code sent to your phone number (+63 ** * **)\"\n        }), _jsx(View, {\n          style: styles.codeContainer,\n          children: renderInputs()\n        }), _jsx(TouchableOpacity, {\n          style: styles.resendButton,\n          children: _jsx(Text, {\n            style: [styles.resendButtonText, {\n              fontFamily: 'Aleo_400Regular'\n            }],\n            children: \"I didn't receive a code. Resend\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.verifyButton,\n          children: _jsx(Text, {\n            style: [styles.verifyButtonText, {\n              fontFamily: 'Aleo_700Bold'\n            }],\n            children: \"Verify now\"\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBD28552',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  header: {\n    backgroundColor: '#98BF64',\n    paddingVertical: 10,\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10\n  },\n  headerText: {\n    fontSize: 20,\n    color: '#FFFFFF',\n    flex: 1,\n    textAlign: 'center'\n  },\n  backButton: {\n    padding: 10\n  },\n  backButtonText: {\n    fontSize: 20,\n    color: '#FFFFFF'\n  },\n  contentContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  formContainer: {\n    width: '80%',\n    alignItems: 'center'\n  },\n  instructionText: {\n    fontSize: 16,\n    color: '#AF5F17',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  codeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 20\n  },\n  codeInput: {\n    width: 40,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#AF5F17',\n    borderRadius: 5,\n    marginHorizontal: 5,\n    textAlign: 'center',\n    fontSize: 18,\n    backgroundColor: '#FAFFC7',\n    color: '#AF5F17'\n  },\n  emptyInput: {\n    backgroundColor: '#F0F0F0'\n  },\n  resendButton: {\n    marginBottom: 20\n  },\n  resendButtonText: {\n    color: '#AF5F17',\n    textDecorationLine: 'underline'\n  },\n  verifyButton: {\n    backgroundColor: '#FF6600',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  verifyButtonText: {\n    color: '#FFFFFF'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","StyleSheet","Text","View","TouchableOpacity","TextInput","Aleo_700Bold","Aleo_400Regular","Font","useNavigation","jsx","_jsx","jsxs","_jsxs","Verification","_useState","_useState2","_slicedToArray","verificationCode","setVerificationCode","_useState3","_useState4","fontsLoaded","setFontsLoaded","inputRefs","navigation","handleBackButtonPress","goBack","loadFonts","_ref","_asyncToGenerator","loadAsync","apply","arguments","useEffect","handleInputChange","text","index","newVerificationCode","_toConsumableArray","length","current","focus","_inputRefs$current","renderInputs","map","code","ref","style","styles","codeInput","emptyInput","fontFamily","maxLength","keyboardType","value","onChangeText","toString","container","children","header","backButton","onPress","backButtonText","headerText","contentContainer","formContainer","instructionText","codeContainer","resendButton","resendButtonText","verifyButton","verifyButtonText","create","flex","backgroundColor","alignItems","justifyContent","paddingVertical","width","flexDirection","paddingHorizontal","fontSize","color","textAlign","padding","marginBottom","height","borderWidth","borderColor","borderRadius","marginHorizontal","textDecorationLine"],"sources":["C:/WealGo/components/Verification.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native';\r\nimport { Aleo_700Bold, Aleo_400Regular } from '@expo-google-fonts/aleo';\r\nimport * as Font from 'expo-font';\r\nimport { useNavigation } from '@react-navigation/native'; \r\n\r\nexport default function Verification() {\r\n  const [verificationCode, setVerificationCode] = useState(['', '', '', '']);\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const inputRefs = useRef([]);\r\nconst navigation = useNavigation();\r\n\r\n const handleBackButtonPress = () => {\r\n    navigation.goBack(); // Navigate back to the previous screen\r\n  };\r\n\r\n  const loadFonts = async () => {\r\n    await Font.loadAsync({\r\n      Aleo_700Bold,\r\n      Aleo_400Regular,\r\n    });\r\n    setFontsLoaded(true);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  const handleInputChange = (text, index) => {\r\n    const newVerificationCode = [...verificationCode];\r\n    newVerificationCode[index] = text;\r\n    setVerificationCode(newVerificationCode);\r\n\r\n    if (text.length === 0 && index > 0) {\r\n      inputRefs.current[index - 1].focus();\r\n    } else if (text.length === 1 && index < 3) {\r\n      inputRefs.current[index + 1]?.focus();\r\n    }\r\n  };\r\n\r\n  const renderInputs = () => {\r\n    return verificationCode.map((code, index) => (\r\n      <TextInput\r\n        ref={(ref) => (inputRefs.current[index] = ref)}\r\n        key={index.toString()}\r\n        style={[styles.codeInput, code.length === 0 && styles.emptyInput, { fontFamily: 'Aleo_400Regular' }]}\r\n        maxLength={1}\r\n        keyboardType=\"numeric\"\r\n        value={code}\r\n        onChangeText={(text) => handleInputChange(text, index)}\r\n      />\r\n    ));\r\n  };\r\n\r\n  if (!fontsLoaded) {\r\n    return null; // Wait for the fonts to load\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <TouchableOpacity style={styles.backButton}\r\n        onPress={handleBackButtonPress}>\r\n          <Text style={styles.backButtonText}>{'<'}</Text>\r\n        </TouchableOpacity>\r\n        <Text style={[styles.headerText, { fontFamily: 'Aleo_700Bold' }]}>Verification</Text>\r\n      </View>\r\n      <View style={styles.contentContainer}>\r\n        <View style={styles.formContainer}>\r\n          <Text style={[styles.instructionText, { fontFamily: 'Aleo_400Regular' }]}>\r\n            Please enter the verification code sent to your phone number (+63 **\r\n*\r\n**)\r\n          </Text>\r\n          <View style={styles.codeContainer}>{renderInputs()}</View>\r\n          <TouchableOpacity style={styles.resendButton}>\r\n            <Text style={[styles.resendButtonText, { fontFamily: 'Aleo_400Regular' }]}>I didn't receive a code. Resend</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity \r\n            style={styles.verifyButton}>\r\n            <Text style={[styles.verifyButtonText, { fontFamily: 'Aleo_700Bold' }]}>Verify now</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FBD28552',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  header: {\r\n    backgroundColor: '#98BF64',\r\n    paddingVertical: 10,\r\n    width: '100%',\r\n    flexDirection: 'row', // Make the header content aligned horizontally\r\n    alignItems: 'center', // Align content vertically\r\n    paddingHorizontal: 10, // Add padding to the sides\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: '#FFFFFF',\r\n    flex: 1, // Allow text to take up remaining space\r\n    textAlign: 'center', // Center text horizontally\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n  },\r\n  backButtonText: {\r\n    fontSize: 20,\r\n    color: '#FFFFFF',\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  formContainer: {\r\n    width: '80%',\r\n    alignItems: 'center',\r\n  },\r\n  instructionText: {\r\n    fontSize: 16,\r\n    color: '#AF5F17',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  codeContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  codeInput: {\r\n    width: 40,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#AF5F17',\r\n    borderRadius: 5,\r\n    marginHorizontal: 5,\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    backgroundColor: '#FAFFC7',\r\n    color: '#AF5F17',\r\n  },\r\n  emptyInput: {\r\n    backgroundColor: '#F0F0F0',\r\n  },\r\n  resendButton: {\r\n    marginBottom: 20,\r\n  },\r\n  resendButtonText: {\r\n    color: '#AF5F17',\r\n    textDecorationLine: 'underline',\r\n  },\r\n  verifyButton: {\r\n    backgroundColor: '#FF6600',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  verifyButtonText: {\r\n    color: '#FFFFFF',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}