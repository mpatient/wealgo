{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"mode\"];\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInputOutlined from \"./TextInputOutlined\";\nimport TextInputFlat from \"./TextInputFlat\";\nimport TextInputIcon from \"./Adornment/TextInputIcon\";\nimport TextInputAffix from \"./Adornment/TextInputAffix\";\nimport { withTheme } from \"../../core/theming\";\nvar BLUR_ANIMATION_DURATION = 180;\nvar FOCUS_ANIMATION_DURATION = 150;\nvar TextInput = function (_React$Component) {\n  function TextInput() {\n    var _this;\n    _classCallCheck(this, TextInput);\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, TextInput, [].concat(_args));\n    _defineProperty(_this, \"validInputValue\", _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue);\n    _defineProperty(_this, \"state\", {\n      labeled: new Animated.Value(_this.validInputValue ? 0 : 1),\n      error: new Animated.Value(_this.props.error ? 1 : 0),\n      focused: false,\n      placeholder: '',\n      value: _this.validInputValue,\n      labelLayout: {\n        measured: false,\n        width: 0,\n        height: 0\n      },\n      leftLayout: {\n        width: null,\n        height: null\n      },\n      rightLayout: {\n        width: null,\n        height: null\n      }\n    });\n    _defineProperty(_this, \"ref\", void 0);\n    _defineProperty(_this, \"showPlaceholder\", function () {\n      if (_this.timer) {\n        clearTimeout(_this.timer);\n      }\n      _this.timer = setTimeout(function () {\n        return _this.setState({\n          placeholder: _this.props.placeholder\n        });\n      }, 50);\n    });\n    _defineProperty(_this, \"hidePlaceholder\", function () {\n      return _this.setState({\n        placeholder: ''\n      });\n    });\n    _defineProperty(_this, \"timer\", void 0);\n    _defineProperty(_this, \"root\", void 0);\n    _defineProperty(_this, \"showError\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.error, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION * scale,\n        useNativeDriver: Platform.select({\n          ios: false,\n          default: true\n        })\n      }).start();\n    });\n    _defineProperty(_this, \"hideError\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.error, {\n        toValue: 0,\n        duration: BLUR_ANIMATION_DURATION * scale,\n        useNativeDriver: Platform.select({\n          ios: false,\n          default: true\n        })\n      }).start();\n    });\n    _defineProperty(_this, \"restoreLabel\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.labeled, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION * scale,\n        useNativeDriver: Platform.select({\n          ios: false,\n          default: true\n        })\n      }).start();\n    });\n    _defineProperty(_this, \"minimizeLabel\", function () {\n      var scale = _this.props.theme.animation.scale;\n      Animated.timing(_this.state.labeled, {\n        toValue: 0,\n        duration: BLUR_ANIMATION_DURATION * scale,\n        useNativeDriver: Platform.select({\n          ios: false,\n          default: true\n        })\n      }).start();\n    });\n    _defineProperty(_this, \"onLeftAffixLayoutChange\", function (event) {\n      _this.setState({\n        leftLayout: {\n          height: event.nativeEvent.layout.height,\n          width: event.nativeEvent.layout.width\n        }\n      });\n    });\n    _defineProperty(_this, \"onRightAffixLayoutChange\", function (event) {\n      _this.setState({\n        rightLayout: {\n          width: event.nativeEvent.layout.width,\n          height: event.nativeEvent.layout.height\n        }\n      });\n    });\n    _defineProperty(_this, \"handleFocus\", function (args) {\n      if (_this.props.disabled || !_this.props.editable) {\n        return;\n      }\n      _this.setState({\n        focused: true\n      });\n      if (_this.props.onFocus) {\n        _this.props.onFocus(args);\n      }\n    });\n    _defineProperty(_this, \"handleBlur\", function (args) {\n      if (!_this.props.editable) {\n        return;\n      }\n      _this.setState({\n        focused: false\n      });\n      if (_this.props.onBlur) {\n        _this.props.onBlur(args);\n      }\n    });\n    _defineProperty(_this, \"handleChangeText\", function (value) {\n      if (!_this.props.editable) {\n        return;\n      }\n      _this.setState({\n        value: value\n      });\n      _this.props.onChangeText && _this.props.onChangeText(value);\n    });\n    _defineProperty(_this, \"handleLayoutAnimatedText\", function (e) {\n      _this.setState({\n        labelLayout: {\n          width: e.nativeEvent.layout.width,\n          height: e.nativeEvent.layout.height,\n          measured: true\n        }\n      });\n    });\n    _defineProperty(_this, \"forceFocus\", function () {\n      var _this$root;\n      return (_this$root = _this.root) === null || _this$root === void 0 ? void 0 : _this$root.focus();\n    });\n    return _this;\n  }\n  _inherits(TextInput, _React$Component);\n  return _createClass(TextInput, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var isFocusChanged = prevState.focused !== this.state.focused;\n      var isValueChanged = prevState.value !== this.state.value;\n      var isLabelLayoutChanged = prevState.labelLayout !== this.state.labelLayout;\n      var isLabelChanged = prevProps.label !== this.props.label;\n      var isErrorChanged = prevProps.error !== this.props.error;\n      if (isFocusChanged || isValueChanged || isLabelLayoutChanged) {\n        if (this.state.value || this.state.focused) {\n          this.minimizeLabel();\n        } else {\n          this.restoreLabel();\n        }\n      }\n      if (isFocusChanged || isLabelChanged) {\n        if (this.state.focused || !this.props.label) {\n          this.showPlaceholder();\n        } else {\n          this.hidePlaceholder();\n        }\n      }\n      if (isErrorChanged) {\n        if (this.props.error) {\n          this.showError();\n        } else {\n          this.hideError();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(args) {\n      return this.root && this.root.setNativeProps(args);\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.root && this.root.isFocused();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this.root && this.root.clear();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      return this.root && this.root.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      return this.root && this.root.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        mode = _this$props.mode,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      return mode === 'outlined' ? React.createElement(TextInputOutlined, _extends({}, rest, {\n        value: this.state.value,\n        parentState: this.state,\n        innerRef: function innerRef(ref) {\n          _this2.root = ref;\n        },\n        onFocus: this.handleFocus,\n        forceFocus: this.forceFocus,\n        onBlur: this.handleBlur,\n        onChangeText: this.handleChangeText,\n        onLayoutAnimatedText: this.handleLayoutAnimatedText,\n        onLeftAffixLayoutChange: this.onLeftAffixLayoutChange,\n        onRightAffixLayoutChange: this.onRightAffixLayoutChange\n      })) : React.createElement(TextInputFlat, _extends({}, rest, {\n        value: this.state.value,\n        parentState: this.state,\n        innerRef: function innerRef(ref) {\n          _this2.root = ref;\n        },\n        onFocus: this.handleFocus,\n        forceFocus: this.forceFocus,\n        onBlur: this.handleBlur,\n        onChangeText: this.handleChangeText,\n        onLayoutAnimatedText: this.handleLayoutAnimatedText,\n        onLeftAffixLayoutChange: this.onLeftAffixLayoutChange,\n        onRightAffixLayoutChange: this.onRightAffixLayoutChange\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        value: typeof nextProps.value !== 'undefined' ? nextProps.value : prevState.value\n      };\n    }\n  }]);\n}(React.Component);\n_defineProperty(TextInput, \"Icon\", TextInputIcon);\n_defineProperty(TextInput, \"Affix\", TextInputAffix);\n_defineProperty(TextInput, \"defaultProps\", {\n  mode: 'flat',\n  dense: false,\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, props);\n  }\n});\nexport default withTheme(TextInput);","map":{"version":3,"names":["React","Animated","NativeTextInput","Platform","TextInputOutlined","TextInputFlat","TextInputIcon","TextInputAffix","withTheme","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","_React$Component","_this","_classCallCheck","_len","arguments","length","_args","Array","_key","_callSuper","concat","_defineProperty","props","value","undefined","defaultValue","labeled","Value","validInputValue","error","focused","placeholder","labelLayout","measured","width","height","leftLayout","rightLayout","timer","clearTimeout","setTimeout","setState","scale","theme","animation","timing","state","toValue","duration","useNativeDriver","select","ios","default","start","event","nativeEvent","layout","args","disabled","editable","onFocus","onBlur","onChangeText","e","_this$root","root","focus","_inherits","_createClass","key","componentDidUpdate","prevProps","prevState","isFocusChanged","isValueChanged","isLabelLayoutChanged","isLabelChanged","label","isErrorChanged","minimizeLabel","restoreLabel","showPlaceholder","hidePlaceholder","showError","hideError","componentWillUnmount","setNativeProps","isFocused","clear","blur","render","_this2","_this$props","mode","rest","_objectWithoutProperties","_excluded","createElement","_extends","parentState","innerRef","ref","handleFocus","forceFocus","handleBlur","handleChangeText","onLayoutAnimatedText","handleLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","getDerivedStateFromProps","nextProps","Component","dense","multiline"],"sources":["C:\\WealGo\\node_modules\\react-native-paper\\lib\\module\\components\\TextInput\\TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextInput as NativeTextInput,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TextInputOutlined from './TextInputOutlined';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputIcon from './Adornment/TextInputIcon';\nimport TextInputAffix from './Adornment/TextInputAffix';\nimport { withTheme } from '../../core/theming';\nimport type { RenderProps, State } from './types';\nimport type { $Omit } from '../../types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type TextInputProps = React.ComponentPropsWithRef<\n  typeof NativeTextInput\n> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text to use for the floating label.\n   */\n  label?: string;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input\n   */\n  selectionColor?: string;\n  /**\n   * Underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `heigh` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nclass TextInput extends React.Component<TextInputProps, State> {\n  // @component ./Adornment/TextInputIcon.tsx\n  static Icon = TextInputIcon;\n\n  // @component ./Adornment/TextInputAffix.tsx\n  static Affix = TextInputAffix;\n\n  static defaultProps: Partial<TextInputProps> = {\n    mode: 'flat',\n    dense: false,\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  static getDerivedStateFromProps(nextProps: TextInputProps, prevState: State) {\n    return {\n      value:\n        typeof nextProps.value !== 'undefined'\n          ? nextProps.value\n          : prevState.value,\n    };\n  }\n  validInputValue =\n    this.props.value !== undefined ? this.props.value : this.props.defaultValue;\n\n  state = {\n    labeled: new Animated.Value(this.validInputValue ? 0 : 1),\n    error: new Animated.Value(this.props.error ? 1 : 0),\n    focused: false,\n    placeholder: '',\n    value: this.validInputValue,\n    labelLayout: {\n      measured: false,\n      width: 0,\n      height: 0,\n    },\n    leftLayout: {\n      width: null,\n      height: null,\n    },\n    rightLayout: {\n      width: null,\n      height: null,\n    },\n  };\n\n  ref: NativeTextInput | undefined | null;\n\n  componentDidUpdate(prevProps: TextInputProps, prevState: State) {\n    const isFocusChanged = prevState.focused !== this.state.focused;\n    const isValueChanged = prevState.value !== this.state.value;\n    const isLabelLayoutChanged =\n      prevState.labelLayout !== this.state.labelLayout;\n    const isLabelChanged = prevProps.label !== this.props.label;\n    const isErrorChanged = prevProps.error !== this.props.error;\n\n    if (\n      isFocusChanged ||\n      isValueChanged ||\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      isLabelLayoutChanged\n    ) {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      if (this.state.value || this.state.focused) {\n        this.minimizeLabel();\n      } else {\n        this.restoreLabel();\n      }\n    }\n\n    if (isFocusChanged || isLabelChanged) {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (this.state.focused || !this.props.label) {\n        this.showPlaceholder();\n      } else {\n        this.hidePlaceholder();\n      }\n    }\n\n    if (isErrorChanged) {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (this.props.error) {\n        this.showError();\n      } else {\n        this.hideError();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  private showPlaceholder = () => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    // Set the placeholder in a delay to offset the label animation\n    // If we show it immediately, they'll overlap and look ugly\n    this.timer = (setTimeout(\n      () =>\n        this.setState({\n          placeholder: this.props.placeholder,\n        }),\n      50\n    ) as unknown) as NodeJS.Timeout;\n  };\n\n  private hidePlaceholder = () =>\n    this.setState({\n      placeholder: '',\n    });\n\n  private timer?: NodeJS.Timeout;\n  private root: NativeTextInput | undefined | null;\n\n  private showError = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.error, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private hideError = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.error, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private restoreLabel = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.labeled, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private minimizeLabel = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.labeled, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n    this.setState({\n      leftLayout: {\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      },\n    });\n  };\n\n  private onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n    this.setState({\n      rightLayout: {\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      },\n    });\n  };\n\n  private handleFocus = (args: any) => {\n    if (this.props.disabled || !this.props.editable) {\n      return;\n    }\n\n    this.setState({ focused: true });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(args);\n    }\n  };\n\n  private handleBlur = (args: Object) => {\n    if (!this.props.editable) {\n      return;\n    }\n\n    this.setState({ focused: false });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(args);\n    }\n  };\n\n  private handleChangeText = (value: string) => {\n    if (!this.props.editable) {\n      return;\n    }\n\n    this.setState({ value });\n    this.props.onChangeText && this.props.onChangeText(value);\n  };\n\n  private handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n    this.setState({\n      labelLayout: {\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      },\n    });\n  };\n\n  forceFocus = () => {\n    return this.root?.focus();\n  };\n\n  /**\n   * @internal\n   */\n  setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  /**\n   * Returns `true` if the input is currently focused, `false` otherwise.\n   */\n  isFocused() {\n    return this.root && this.root.isFocused();\n  }\n\n  /**\n   * Removes all text from the TextInput.\n   */\n  clear() {\n    return this.root && this.root.clear();\n  }\n\n  /**\n   * Focuses the input.\n   */\n  focus() {\n    return this.root && this.root.focus();\n  }\n\n  /**\n   * Removes focus from the input.\n   */\n  blur() {\n    return this.root && this.root.blur();\n  }\n  render() {\n    const { mode, ...rest } = this.props as $Omit<TextInputProps, 'ref'>;\n\n    return mode === 'outlined' ? (\n      <TextInputOutlined\n        {...rest}\n        value={this.state.value}\n        parentState={this.state}\n        innerRef={(ref) => {\n          this.root = ref;\n        }}\n        onFocus={this.handleFocus}\n        forceFocus={this.forceFocus}\n        onBlur={this.handleBlur}\n        onChangeText={this.handleChangeText}\n        onLayoutAnimatedText={this.handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={this.onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={this.onRightAffixLayoutChange}\n      />\n    ) : (\n      <TextInputFlat\n        {...rest}\n        value={this.state.value}\n        parentState={this.state}\n        innerRef={(ref) => {\n          this.root = ref;\n        }}\n        onFocus={this.handleFocus}\n        forceFocus={this.forceFocus}\n        onBlur={this.handleBlur}\n        onChangeText={this.handleChangeText}\n        onLayoutAnimatedText={this.handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={this.onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={this.onRightAffixLayoutChange}\n      />\n    );\n  }\n}\n\nexport default withTheme(TextInput);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}