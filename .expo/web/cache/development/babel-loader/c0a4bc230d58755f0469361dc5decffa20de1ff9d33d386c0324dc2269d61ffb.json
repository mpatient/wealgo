{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport color from 'color';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { withTheme } from \"../../../core/theming\";\nimport { AdornmentSide } from \"./enums\";\nvar AFFIX_OFFSET = 12;\nvar AffixContext = React.createContext({\n  textStyle: {\n    fontFamily: '',\n    color: ''\n  },\n  topPosition: null,\n  side: AdornmentSide.Left\n});\nvar AffixAdornment = function AffixAdornment(_ref) {\n  var affix = _ref.affix,\n    side = _ref.side,\n    textStyle = _ref.textStyle,\n    topPosition = _ref.topPosition,\n    onLayout = _ref.onLayout,\n    visible = _ref.visible,\n    paddingHorizontal = _ref.paddingHorizontal;\n  return React.createElement(AffixContext.Provider, {\n    value: {\n      side: side,\n      textStyle: textStyle,\n      topPosition: topPosition,\n      onLayout: onLayout,\n      visible: visible,\n      paddingHorizontal: paddingHorizontal\n    }\n  }, affix);\n};\nvar TextInputAffix = function TextInputAffix(_ref2) {\n  var text = _ref2.text,\n    labelStyle = _ref2.textStyle,\n    theme = _ref2.theme;\n  var _React$useContext = React.useContext(AffixContext),\n    textStyle = _React$useContext.textStyle,\n    onLayout = _React$useContext.onLayout,\n    topPosition = _React$useContext.topPosition,\n    side = _React$useContext.side,\n    visible = _React$useContext.visible,\n    paddingHorizontal = _React$useContext.paddingHorizontal;\n  var textColor = color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  var offset = typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n  var style = _defineProperty({\n    top: topPosition\n  }, side, offset);\n  return React.createElement(Animated.View, {\n    style: [styles.container, style, {\n      opacity: (visible === null || visible === void 0 ? void 0 : visible.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      })) || 1\n    }],\n    onLayout: onLayout\n  }, React.createElement(Text, {\n    style: [{\n      color: textColor\n    }, textStyle, labelStyle]\n  }, text));\n};\nTextInputAffix.displayName = 'TextInput.Affix';\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withTheme(TextInputAffix);\nexport { TextInputAffix, AffixAdornment };","map":{"version":3,"names":["React","color","Text","StyleSheet","Animated","withTheme","AdornmentSide","AFFIX_OFFSET","AffixContext","createContext","textStyle","fontFamily","topPosition","side","Left","AffixAdornment","_ref","affix","onLayout","visible","paddingHorizontal","createElement","Provider","value","TextInputAffix","_ref2","text","labelStyle","theme","_React$useContext","useContext","textColor","colors","alpha","dark","rgb","string","offset","style","_defineProperty","top","View","styles","container","opacity","interpolate","inputRange","outputRange","displayName","create","position","justifyContent","alignItems"],"sources":["C:\\WealGo\\node_modules\\react-native-paper\\lib\\module\\components\\TextInput\\Adornment\\TextInputAffix.tsx"],"sourcesContent":["import React from 'react';\nimport color from 'color';\nimport {\n  Text,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n  LayoutChangeEvent,\n  Animated,\n  ViewStyle,\n} from 'react-native';\n\nimport { withTheme } from '../../../core/theming';\nimport { AdornmentSide } from './enums';\n\nconst AFFIX_OFFSET = 12;\n\ntype Props = {\n  /**\n   * Text to show.\n   */\n  text: string;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  /**\n   * Style that is passed to the Text element.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype ContextState = {\n  topPosition: number | null;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  visible?: Animated.Value;\n  textStyle?: StyleProp<TextStyle>;\n  side: AdornmentSide;\n  paddingHorizontal?: number | string;\n};\n\nconst AffixContext = React.createContext<ContextState>({\n  textStyle: { fontFamily: '', color: '' },\n  topPosition: null,\n  side: AdornmentSide.Left,\n});\n\nconst AffixAdornment: React.FunctionComponent<\n  {\n    affix: React.ReactNode;\n    testID: string;\n  } & ContextState\n> = ({\n  affix,\n  side,\n  textStyle,\n  topPosition,\n  onLayout,\n  visible,\n  paddingHorizontal,\n}) => {\n  return (\n    <AffixContext.Provider\n      value={{\n        side,\n        textStyle,\n        topPosition,\n        onLayout,\n        visible,\n        paddingHorizontal,\n      }}\n    >\n      {affix}\n    </AffixContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing text in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outline.affix.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       mode=\"outlined\"\n *       label=\"Outlined input\"\n *       placeholder=\"Type something\"\n *       right={<TextInput.Affix text=\"/100\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputAffix = ({ text, textStyle: labelStyle, theme }: Props) => {\n  const {\n    textStyle,\n    onLayout,\n    topPosition,\n    side,\n    visible,\n    paddingHorizontal,\n  } = React.useContext(AffixContext);\n  const textColor = color(theme.colors.text)\n    .alpha(theme.dark ? 0.7 : 0.54)\n    .rgb()\n    .string();\n\n  const offset =\n    typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n\n  const style = {\n    top: topPosition,\n    [side]: offset,\n  } as ViewStyle;\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        style,\n        {\n          opacity:\n            visible?.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }) || 1,\n        },\n      ]}\n      onLayout={onLayout}\n    >\n      <Text style={[{ color: textColor }, textStyle, labelStyle]}>{text}</Text>\n    </Animated.View>\n  );\n};\nTextInputAffix.displayName = 'TextInput.Affix';\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(TextInputAffix);\n\n// @component-docs ignore-next-line\nexport { TextInputAffix, AffixAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}